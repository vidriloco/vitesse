# encoding: utf-8
require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe LugaresController do    
  
  describe "GET index" do
    before(:each) do
      @lugar = Factory.build(:lugar)
      @params = {"nombre" => 'Daikoku', "detalles" => "No hay"}
    end
    
    it "asigna un conjunto de lugares a @lugares con paginacion" do
      Lugar.should_receive(:paginate).with(:page => 1, :order => "created_at DESC") { [@lugar] }
      
      get :index, :page => 1
      assigns(:lugares).should == [@lugar]
    end
    
    it "despliega el template index" do
      Lugar.stub(:paginate) { [@lugar] }
      
      get :index
      response.should render_template("index")
    end
  end
  
  describe "GET show" do
    
    before(:each) do
      @lugar = Factory.build(:lugar)
    end
    
    it "asigna el lugar buscado a @lugar" do
      Lugar.stub(:find).with("37", :include => :tags) { @lugar }
      get :show, :id => "37"
      assigns(:lugar).should be(@lugar)
    end
  end
  
  describe "Logeado" do
    
    before(:each) do
      @usuario = Factory(:usuario)
      sign_in @usuario
    end
    
    describe "GET new" do
    
      before(:each) do
        @lugar = mock_model(Lugar).as_null_object
      end
    
      it "asigna un nuevo lugar a @lugar" do
        Lugar.stub(:new) { @lugar }
        get :new
        assigns(:lugar).should == @lugar
      end
    end
  
    describe "GET confirm_destroy" do
    
      before(:each) do
        @lugar = Factory(:lugar)
      end
    
      it "sends me to confirmation removal page for a place given I am logged in and I am virtually one owner of it" do
        Uslu.should_receive(:alterable).with(:usuario => 1, :lugar => "23") { @lugar }
        get :confirm_destroy, :id => "23"
        assigns(:lugar).should be(@lugar)
      end
    
      it "sends me back to place page given I am not allowed to destroy the record" do
        Uslu.should_receive(:alterable).with(:usuario => 1, :lugar => "23") { nil }
        get :confirm_destroy, :id => "23"
        response.should redirect_to(lugar_path(23))
      end
    
    end
  
    describe "DELETE destroy" do
    
      before(:each) do
        @lugar = Factory(:lugar)
      end
    
      it "destruye el lugar requerido" do
        Lugar.stub(:find).with("37") { @lugar }
        @lugar.should_receive(:destroy)
        delete :destroy, :id => "37"
      end

      it "redirecciona a la lista de lugares" do
        Lugar.stub(:find) { @lugar }
        delete :destroy, :id => "1"
        response.should redirect_to(lugares_url)
      end
    end
  
  
    describe "POST create" do
    
      before(:each) do
        @lugar = Factory.build(:lugar)
      end
    
      describe "con parámetros válidos" do
      
        before(:each) do
          @lugar.stub(:save).and_return(true)
        end
      
        it "asigna un nuevo lugar a @lugar" do
          Lugar.stub(:new).with('correct' => 'params') { @lugar }
          @lugar.should_receive(:aplica_geo).with({"lat" => "19.45", "lon" => "-99.23"})
          Uslu.should_receive(:puede_alterar_a)
        
          post :create, :lugar => {'correct' => 'params'}, :coordenadas => {:lat => "19.45", :lon => "-99.23"}
          assigns(:lugar).should be(@lugar)
        end

        it "redirecciona al recién creado lugar" do
          Lugar.stub(:new) { @lugar }
          @lugar.stub(:aplica_geo)
        
          post :create, :lugar => {}, :coordenadas => {}
          response.should redirect_to(@lugar)
        end
      end

      describe "con parámetros no válidos" do
      
        before(:each) do
          @lugar.stub(:save).and_return(false)
        end
      
        it "asigna un nuevo lugar sin salvar a @lugar" do
          Lugar.stub(:new).with('bad' => 'params') { @lugar }
          post :create, :lugar => {'bad' => 'params'}, :coordenadas => {}
          assigns(:lugar).should be(@lugar)
        end

        it "re-despliega el template 'new'" do
          Lugar.stub(:new) { @lugar }
          post :create, :lugar => {}, :coordenadas => {}
          response.should render_template("new")
        end
      end
    end
  
    describe "GET edit" do
    
      before(:each) do
        @lugar = Factory(:lugar)
      end
    
      it "asigna un lugar a @lugar" do
        Lugar.stub(:find).with("37", :include => :tags) { @lugar }
        get :edit, :id => "37"
        assigns(:lugar).should be(@lugar)
      end
    end
    
    describe "PUT update" do
      
      before(:each) do
        @lugar = Factory(:lugar)
      end
      
      describe "con parámetros válidos" do
        it "actualiza el lugar" do
          Lugar.stub(:find).with("37") { @lugar }
          @lugar.should_receive(:update_attributes).with({'these' => 'params'})
          @lugar.should_receive(:aplica_geo).with({"lat" => 19.2232, "lon" => -99.343})
          put :update, :id => "37", :lugar => {'these' => 'params'}, :coordenadas => {:lat => 19.2232, :lon => -99.343}
        end

        it "asigna los parámetros a @lugar" do
          Lugar.stub(:find) { @lugar }
          @lugar.stub(:aplica_geo)
          put :update, :id => "1"
          assigns(:lugar).should be(@lugar)
        end

        it "redirecciona a sesión" do
          Lugar.stub(:find) { @lugar }
          @lugar.stub(:aplica_geo)
          put :update, :id => "1"
          response.should redirect_to(lugar_url(@lugar))
        end
      end

      describe "con parámetros no válidos" do
        it "asigna la sesión a sesión" do
          Lugar.stub(:find) { @lugar }
          @lugar.stub(:update_attributes).and_return(false)
          @lugar.stub(:aplica_geo)
          put :update, :id => "1"
          assigns(:lugar).should be(@lugar)
        end

        it "re-despliega el template 'edit'" do
          Lugar.stub(:find) { @lugar }
          @lugar.stub(:update_attributes).and_return(false)
          @lugar.stub(:aplica_geo)
          put :update, :id => "1"
          response.should render_template("edit")
        end
      end
    end
    
  end
end
